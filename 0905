#include <cstdio>
#include <cstring>
#include <iostream>
#include <string>
#include <map>
#include <queue>

using namespace std;
int A[3];
typedef pair<string, int> Node;
map <string, int> mapping;

string str;
queue <Node> que;

bool isOk(string s) {
    int len = s.size();
    for (int i = 0; i <= len-4; i++) {
        if (s[i] == '2' && s[i + 1] == '0' && s[i + 2] == '1' && s[i + 3] == '2') {
            return true;
        }
    }
    return false;
}

int main() {
    int n;
    while (scanf("%d", &n) != EOF) {
        cin >> str;
        int len = str.size();
        memset(cnt, 0, sizeof(cnt));
        for (int i = 0; i < len; i++) {
            cnt[str[i] - '0']++;
        }
        if (cnt[0] < 1 || cnt[1] < 1 || cnt[2] < 2) {
            puts("-1");
            continue;
        }
        while (!que.empty()) {
            que.pop();
        }
        mapping.clear();
        mapping[str] = 1;
        que.push(Node(str, 0));
        int ans = -1;
        while (!que.empty()) {
            Node p = que.front(); que.pop();
            string t = p.first;
            int step = p.second;
            if (isOk(t)) {
                ans = step;
                break;
            }
            for (int i = 0; i+1 < len; i++) {
                string tmp = t;
                swap(tmp[i], tmp[i + 1]);
                if (mapping.find(tmp) == mapping.end()) {
                    mapping[tmp] = 1;
                    que.push(Node(tmp, step + 1));
                }
            }

        }
        printf("%d\n", ans);
        
    }
    return 0;
}
