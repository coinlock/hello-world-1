#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
 
int matrix[105][105];
int tr[105];
 
int merge(int n, int goal) {
    int ans = -1;
    int start = 0, end = 0, sum = 0;
    while (end < n) {
        if (sum < goal)
            sum += tr[end];
        while (sum >= goal) {
            int len = end - start + 1;
            if (ans == -1) ans = len;
            else if (len < ans) ans = len;
            sum -= tr[start++];
        }
        ++end;
    }
    return ans;
}
 
int main(int argc, char const *argv[])
{
    int n, m, k;
    while(scanf("%d %d %d",&n, &m, &k) != EOF) {
       for(int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++) {
            scanf("%d",&matrix[i][j]);
        }
       }
 
       int ans = n*m + 1;
       for(int i = 0; i < m; i++) {
            memset(tr,0,sizeof(tr));
            for(int j = i; j < m; j++) {
             
                int ansij = -1;
 
                int base = j - i + 1;
                for(int h = 0; h < n; h++) {
                   tr[h] = tr[h] + matrix[h][j];   
                     
                }
                ansij = merge(n, k);
                if(ansij != -1 && ansij *base < ans) {
                    ans = ansij*base;
                }
            }
       }
       if(ans < n*m+1) {
            printf("%d\n", ans);
       }
       else {
            puts("-1");
       }
        
    }
    return 0;
}
